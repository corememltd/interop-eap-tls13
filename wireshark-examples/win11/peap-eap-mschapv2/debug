FreeRADIUS Version 3.0.26
Copyright (C) 1999-2021 The FreeRADIUS server project and contributors
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE
You may redistribute copies of FreeRADIUS under the terms of the
GNU General Public License
For more information about these matters, see the file named COPYRIGHT
Starting - reading configuration files ...
including dictionary file /usr/share/freeradius/dictionary
including dictionary file /usr/share/freeradius/dictionary.dhcp
including dictionary file /usr/share/freeradius/dictionary.vqp
including dictionary file /etc/freeradius/dictionary
including configuration file /etc/freeradius/radiusd.conf
including configuration file /etc/freeradius/proxy.conf
including configuration file /etc/freeradius/clients.conf
including files in directory /etc/freeradius/mods-enabled/
including configuration file /etc/freeradius/mods-enabled/detail
including configuration file /etc/freeradius/mods-enabled/realm
including configuration file /etc/freeradius/mods-enabled/pap
including configuration file /etc/freeradius/mods-enabled/files
including configuration file /etc/freeradius/mods-enabled/always
including configuration file /etc/freeradius/mods-enabled/mschap
including configuration file /etc/freeradius/mods-enabled/eap-test
including files in directory /etc/freeradius/policy.d/
including configuration file /etc/freeradius/policy.d/test-files
including configuration file /etc/freeradius/policy.d/canonicalization
including configuration file /etc/freeradius/policy.d/accounting
including configuration file /etc/freeradius/policy.d/operator-name
including configuration file /etc/freeradius/policy.d/filter
including configuration file /etc/freeradius/policy.d/debug
including configuration file /etc/freeradius/policy.d/control
including configuration file /etc/freeradius/policy.d/moonshot-targeted-ids
including configuration file /etc/freeradius/policy.d/eap
including configuration file /etc/freeradius/policy.d/rfc7542
including configuration file /etc/freeradius/policy.d/cui
including configuration file /etc/freeradius/policy.d/abfab-tr
including configuration file /etc/freeradius/policy.d/dhcp
including files in directory /etc/freeradius/sites-enabled/
including configuration file /etc/freeradius/sites-enabled/eap-test-tunnel
including configuration file /etc/freeradius/sites-enabled/test
main {
 security {
 	user = "freerad"
 	group = "freerad"
 	allow_core_dumps = no
 }
	name = "freeradius"
	prefix = "/usr"
	localstatedir = "/var"
	logdir = "/var/log/freeradius"
	run_dir = "/var/run/freeradius"
}
main {
	name = "freeradius"
	prefix = "/usr"
	localstatedir = "/var"
	sbindir = "/usr/sbin"
	logdir = "/var/log/freeradius"
	run_dir = "/var/run/freeradius"
	libdir = "/usr/lib/freeradius"
	radacctdir = "/var/log/freeradius/radacct"
	hostname_lookups = no
	max_request_time = 30
	cleanup_delay = 5
	max_requests = 16384
	postauth_client_lost = no
	pidfile = "/var/run/freeradius/freeradius.pid"
	checkrad = "/usr/sbin/checkrad"
	debug_level = 0
	proxy_requests = yes
 log {
 	stripped_names = no
 	auth = no
 	auth_badpass = no
 	auth_goodpass = no
 	colourise = yes
 	msg_denied = "You are already logged in - access denied"
 }
 resources {
 }
 security {
 	max_attributes = 200
 	reject_delay = 1.000000
 	status_server = yes
 }
}
radiusd: #### Loading Realms and Home Servers ####
 proxy server {
 	retry_delay = 5
 	retry_count = 3
 	default_fallback = no
 	dead_time = 120
 	wake_all_if_all_dead = no
 }
 home_server localhost {
 	ipaddr = 127.0.0.1
 	port = 1812
 	type = "auth"
 	secret = <<< secret >>>
 	response_window = 20.000000
 	response_timeouts = 1
 	max_outstanding = 65536
 	zombie_period = 40
 	status_check = "status-server"
 	ping_interval = 30
 	check_interval = 30
 	check_timeout = 4
 	num_answers_to_alive = 3
 	revive_interval = 120
  limit {
  	max_connections = 16
  	max_requests = 0
  	lifetime = 0
  	idle_timeout = 0
  }
  coa {
  	irt = 2
  	mrt = 16
  	mrc = 5
  	mrd = 30
  }
 }
 home_server_pool my_auth_failover {
	type = fail-over
	home_server = localhost
 }
 realm example.com {
	auth_pool = my_auth_failover
 }
 realm LOCAL {
 }
radiusd: #### Loading Clients ####
 client localhost {
 	ipaddr = 127.0.0.1
 	require_message_authenticator = no
 	secret = <<< secret >>>
 	nas_type = "other"
 	proto = "*"
  limit {
  	max_connections = 16
  	lifetime = 0
  	idle_timeout = 30
  }
 }
 client localhost_ipv6 {
 	ipv6addr = ::1
 	require_message_authenticator = no
 	secret = <<< secret >>>
  limit {
  	max_connections = 16
  	lifetime = 0
  	idle_timeout = 30
  }
 }
Debugger not attached
systemd watchdog is disabled
 # Creating Auth-Type = pap
 # Creating Auth-Type = mschap
 # Creating Auth-Type = eap-test
radiusd: #### Instantiating modules ####
 modules {
  # Loaded module rlm_detail
  # Loading module "detail" from file /etc/freeradius/mods-enabled/detail
  detail {
  	filename = "/var/log/freeradius/radacct/%{%{Packet-Src-IP-Address}:-%{Packet-Src-IPv6-Address}}/detail-%Y%m%d"
  	header = "%t"
  	permissions = 384
  	locking = no
  	escape_filenames = no
  	log_packet_header = no
  }
  # Loaded module rlm_realm
  # Loading module "IPASS" from file /etc/freeradius/mods-enabled/realm
  realm IPASS {
  	format = "prefix"
  	delimiter = "/"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "suffix" from file /etc/freeradius/mods-enabled/realm
  realm suffix {
  	format = "suffix"
  	delimiter = "@"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "bangpath" from file /etc/freeradius/mods-enabled/realm
  realm bangpath {
  	format = "prefix"
  	delimiter = "!"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "realmpercent" from file /etc/freeradius/mods-enabled/realm
  realm realmpercent {
  	format = "suffix"
  	delimiter = "%"
  	ignore_default = no
  	ignore_null = no
  }
  # Loading module "ntdomain" from file /etc/freeradius/mods-enabled/realm
  realm ntdomain {
  	format = "prefix"
  	delimiter = "\\"
  	ignore_default = no
  	ignore_null = no
  }
  # Loaded module rlm_pap
  # Loading module "pap" from file /etc/freeradius/mods-enabled/pap
  pap {
  	normalise = yes
  }
  # Loaded module rlm_files
  # Loading module "files" from file /etc/freeradius/mods-enabled/files
  files {
  	filename = "/etc/freeradius/mods-config/files/authorize"
  	acctusersfile = "/etc/freeradius/mods-config/files/accounting"
  	preproxy_usersfile = "/etc/freeradius/mods-config/files/pre-proxy"
  }
  # Loaded module rlm_always
  # Loading module "reject" from file /etc/freeradius/mods-enabled/always
  always reject {
  	rcode = "reject"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "fail" from file /etc/freeradius/mods-enabled/always
  always fail {
  	rcode = "fail"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "ok" from file /etc/freeradius/mods-enabled/always
  always ok {
  	rcode = "ok"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "handled" from file /etc/freeradius/mods-enabled/always
  always handled {
  	rcode = "handled"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "invalid" from file /etc/freeradius/mods-enabled/always
  always invalid {
  	rcode = "invalid"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "userlock" from file /etc/freeradius/mods-enabled/always
  always userlock {
  	rcode = "userlock"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "notfound" from file /etc/freeradius/mods-enabled/always
  always notfound {
  	rcode = "notfound"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "noop" from file /etc/freeradius/mods-enabled/always
  always noop {
  	rcode = "noop"
  	simulcount = 0
  	mpp = no
  }
  # Loading module "updated" from file /etc/freeradius/mods-enabled/always
  always updated {
  	rcode = "updated"
  	simulcount = 0
  	mpp = no
  }
  # Loaded module rlm_mschap
  # Loading module "mschap" from file /etc/freeradius/mods-enabled/mschap
  mschap {
  	use_mppe = yes
  	require_encryption = no
  	require_strong = no
  	with_ntdomain_hack = yes
   passchange {
   }
  	allow_retry = yes
  	winbind_retry_with_normalised_username = no
  }
  # Loaded module rlm_eap
  # Loading module "eap-test" from file /etc/freeradius/mods-enabled/eap-test
  eap eap-test {
  	default_eap_type = "tls"
  	timer_expire = 60
  	ignore_unknown_eap_types = no
  	cisco_accounting_username_bug = no
  	max_sessions = 16384
  }
  instantiate {
  }
  # Instantiating module "detail" from file /etc/freeradius/mods-enabled/detail
  # Instantiating module "IPASS" from file /etc/freeradius/mods-enabled/realm
  # Instantiating module "suffix" from file /etc/freeradius/mods-enabled/realm
  # Instantiating module "bangpath" from file /etc/freeradius/mods-enabled/realm
  # Instantiating module "realmpercent" from file /etc/freeradius/mods-enabled/realm
  # Instantiating module "ntdomain" from file /etc/freeradius/mods-enabled/realm
  # Instantiating module "pap" from file /etc/freeradius/mods-enabled/pap
  # Instantiating module "files" from file /etc/freeradius/mods-enabled/files
reading pairlist file /etc/freeradius/mods-config/files/authorize
reading pairlist file /etc/freeradius/mods-config/files/accounting
reading pairlist file /etc/freeradius/mods-config/files/pre-proxy
  # Instantiating module "reject" from file /etc/freeradius/mods-enabled/always
  # Instantiating module "fail" from file /etc/freeradius/mods-enabled/always
  # Instantiating module "ok" from file /etc/freeradius/mods-enabled/always
  # Instantiating module "handled" from file /etc/freeradius/mods-enabled/always
  # Instantiating module "invalid" from file /etc/freeradius/mods-enabled/always
  # Instantiating module "userlock" from file /etc/freeradius/mods-enabled/always
  # Instantiating module "notfound" from file /etc/freeradius/mods-enabled/always
  # Instantiating module "noop" from file /etc/freeradius/mods-enabled/always
  # Instantiating module "updated" from file /etc/freeradius/mods-enabled/always
  # Instantiating module "mschap" from file /etc/freeradius/mods-enabled/mschap
rlm_mschap (mschap): using internal authentication
  # Instantiating module "eap-test" from file /etc/freeradius/mods-enabled/eap-test
   # Linked to sub-module rlm_eap_md5
   # Linked to sub-module rlm_eap_pwd
   pwd {
   	group = 19
   	fragment_size = 1020
   	server_id = "theserver@example.com"
   	virtual_server = "eap-test-inner"
   	prep = 0
   	unhex = 1
   }
   # Linked to sub-module rlm_eap_gtc
   gtc {
   	challenge = "Password: "
   	auth_type = "PAP"
   }
   # Linked to sub-module rlm_eap_tls
   tls {
   	tls = "tls-common"
   }
   tls-config tls-common {
   	verify_depth = 0
   	ca_path = "/etc/freeradius/certs"
   	pem_file_type = yes
   	private_key_file = "/etc/freeradius/certs/server.pem"
   	certificate_file = "/etc/freeradius/certs/server.pem"
   	ca_file = "/etc/freeradius/certs/ca.pem"
   	private_key_password = <<< secret >>>
   	dh_file = "/etc/freeradius/certs/dh"
   	fragment_size = 1024
   	include_length = yes
   	auto_chain = yes
   	check_crl = no
   	check_all_crl = no
   	ca_path_reload_interval = 0
   	cipher_list = "DEFAULT"
   	cipher_server_preference = no
   	reject_unknown_intermediate_ca = no
   	ecdh_curve = ""
   	tls_max_version = "1.3"
   	tls_min_version = "1.0"
   	tls13_enable = yes
    cache {
    	enable = no
    	lifetime = 24
    	max_entries = 255
    	persist_dir = "/var/log/freeradius/tlscache"
    }
    verify {
    	skip_if_ocsp_ok = no
    }
    ocsp {
    	enable = no
    	override_cert_url = yes
    	url = "http://127.0.0.1/ocsp/"
    	use_nonce = yes
    	timeout = 0
    	softfail = no
    }
   }
tls: In order to use TLS 1.0 and/or TLS 1.1, you likely need to set: cipher_list = "DEFAULT@SECLEVEL=1"
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!! Most supplicants do not support EAP-TLS with TLS 1.3
!! Please set tls_max_version = "1.2"
!! FreeRADIUS only supports TLS 1.3 for special builds of wpa_supplicant and Windows
!! This limitation is likely to change in late 2021.
!! If you are using this version of FreeRADIUS after 2021, you will probably need to upgrade
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   # Linked to sub-module rlm_eap_ttls
   ttls {
   	tls = "tls-common"
   	default_eap_type = "md5"
   	copy_request_to_tunnel = no
   	use_tunneled_reply = yes
   	virtual_server = "eap-test-inner"
   	include_length = yes
   	require_client_cert = no
   }
tls: Using cached TLS configuration from previous invocation
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!! There is no standard for using TTLS with TLS 1.3
!! Please set tls_max_version = "1.2"
!! FreeRADIUS only supports TLS 1.3 for special builds of wpa_supplicant and Windows
!! This limitation is likely to change in late 2021.
!! If you are using this version of FreeRADIUS after 2021, you will probably need to upgrade
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   # Linked to sub-module rlm_eap_peap
   peap {
   	tls = "tls-common"
   	default_eap_type = "mschapv2"
   	copy_request_to_tunnel = no
   	use_tunneled_reply = yes
   	proxy_tunneled_request_as_eap = yes
   	virtual_server = "eap-test-inner"
   	soh = no
   	require_client_cert = no
   }
tls: Using cached TLS configuration from previous invocation
Failed to find 'Auth-Type eap' section in virtual server eap-test-inner.  The server cannot proxy inner-tunnel EAP packets.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!! There is no standard for using PEAP with TLS 1.3
!! Please set tls_max_version = "1.2"
!! FreeRADIUS only supports TLS 1.3 for special builds of wpa_supplicant and Windows
!! This limitation is likely to change in late 2021.
!! If you are using this version of FreeRADIUS after 2021, you will probably need to upgrade
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   # Linked to sub-module rlm_eap_mschapv2
   mschapv2 {
   	with_ntdomain_hack = no
   	send_error = no
   }
   # Linked to sub-module rlm_eap_fast
   fast {
   	tls = "tls-common"
   	default_eap_type = "mschapv2"
   	virtual_server = "eap-test-inner"
   	cipher_list = "ALL:!EXPORT:!eNULL:!SSLv2"
   	require_client_cert = no
   	pac_lifetime = 604800
   	authority_identity = "1234"
   	pac_opaque_key = "0123456789abcdef0123456789ABCDEF"
   	copy_request_to_tunnel = no
   	use_tunneled_reply = no
   }
tls: Using cached TLS configuration from previous invocation
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!! There is no standard for using EAP-FAST with TLS 1.3
!! Please set tls_max_version = "1.2"
!! FreeRADIUS only supports TLS 1.3 for special builds of wpa_supplicant and Windows
!! This limitation is likely to change in late 2021.
!! If you are using this version of FreeRADIUS after 2021, you will probably need to upgrade
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 } # modules
radiusd: #### Loading Virtual Servers ####
server { # from file /etc/freeradius/radiusd.conf
} # server
server eap-test-inner { # from file /etc/freeradius/sites-enabled/eap-test-tunnel
 # Loading authenticate {...}
 # Loading authorize {...}
 # Loading post-auth {...}
} # server eap-test-inner
server test { # from file /etc/freeradius/sites-enabled/test
 # Loading authenticate {...}
 # Loading authorize {...}
 # Loading accounting {...}
} # server test
radiusd: #### Opening IP addresses and Ports ####
listen {
  	type = "auth"
  	ipv6addr = ::
  	port = 0
  	proto = "udp"
  client everyone_ipv6 {
  	ipv6addr = ::/0
  	require_message_authenticator = no
  	secret = <<< secret >>>
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
  }
  client everyone_ipv4 {
  	ipv4addr = 0.0.0.0/0
  	require_message_authenticator = no
  	secret = <<< secret >>>
   limit {
   	max_connections = 16
   	lifetime = 0
   	idle_timeout = 30
   }
  }
}
listen {
  	type = "auth"
  	ipv6addr = ::
  	port = 0
  	proto = "tcp"
}
listen {
  	type = "auth"
  	ipv4addr = 0.0.0.0
  	port = 0
  	proto = "udp"
}
listen {
  	type = "auth"
  	ipv4addr = 0.0.0.0
  	port = 0
  	proto = "tcp"
}
Listening on auth address :: port 1812 bound to server test
Listening on auth proto tcp address :: port 1812 bound to server test
Listening on auth address * port 1812 bound to server test
Listening on auth proto tcp address * port 1812 bound to server test
Listening on proxy address * port 36011
Listening on proxy address :: port 43115
Ready to process requests
(0) Received Access-Request Id 155 from 127.0.0.1:55096 to 127.0.0.1:1812 length 178
(0)   User-Name = "anonymous"
(0)   NAS-IP-Address = 127.0.0.1
(0)   NAS-Identifier = "hostapd"
(0)   Called-Station-Id = "72-F4-1D-8E-DA-FB:"
(0)   NAS-Port-Type = Wireless-802.11
(0)   Service-Type = Framed-User
(0)   Calling-Station-Id = "52-54-00-12-34-57"
(0)   Connect-Info = "CONNECT 0Mbps 802.11b"
(0)   Acct-Session-Id = "77C1BC3F5142477E"
(0)   Framed-MTU = 1400
(0)   EAP-Message = 0x02aa000e01616e6f6e796d6f7573
(0)   Message-Authenticator = 0x0d73bece4bc0c6eacfb86164a72721d0
(0) # Executing section authorize from file /etc/freeradius/sites-enabled/test
(0)   authorize {
(0)     if (User-Name == "bob") {
(0)     if (User-Name == "bob")  -> FALSE
(0)     [mschap] = noop
(0) eap-test: Peer sent EAP Response (code 2) ID 170 length 14
(0) eap-test: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(0)     [eap-test] = ok
Not doing PAP as Auth-Type is already set.
(0)     [pap] = noop
(0)   } # authorize = ok
(0) Found Auth-Type = eap-test
(0) # Executing group from file /etc/freeradius/sites-enabled/test
(0)   authenticate {
(0) eap-test: Peer sent packet with method EAP Identity (1)
(0) eap-test: Calling submodule eap_tls to process data
(0) eap_tls: (TLS) Initiating new session
(0) eap_tls: (TLS) Setting verify mode to require certificate from client
(0) eap-test: Sending EAP Request (code 1) ID 171 length 6
(0) eap-test: EAP session adding &reply:State = 0xe79779bbe73c743a
(0)     [eap-test] = handled
(0)   } # authenticate = handled
(0) Using Post-Auth-Type Challenge
(0) Post-Auth-Type sub-section not found.  Ignoring.
(0) session-state: Saving cached attributes
(0)   Framed-MTU = 984
(0) Sent Access-Challenge Id 155 from 127.0.0.1:1812 to 127.0.0.1:55096 length 64
(0)   EAP-Message = 0x01ab00060d20
(0)   Message-Authenticator = 0x00000000000000000000000000000000
(0)   State = 0xe79779bbe73c743a6d523dce6f389ec1
(0) Finished request
Waking up in 4.9 seconds.
(1) Received Access-Request Id 156 from 127.0.0.1:55096 to 127.0.0.1:1812 length 188
(1)   User-Name = "anonymous"
(1)   NAS-IP-Address = 127.0.0.1
(1)   NAS-Identifier = "hostapd"
(1)   Called-Station-Id = "72-F4-1D-8E-DA-FB:"
(1)   NAS-Port-Type = Wireless-802.11
(1)   Service-Type = Framed-User
(1)   Calling-Station-Id = "52-54-00-12-34-57"
(1)   Connect-Info = "CONNECT 0Mbps 802.11b"
(1)   Acct-Session-Id = "77C1BC3F5142477E"
(1)   Framed-MTU = 1400
(1)   EAP-Message = 0x02ab00060319
(1)   State = 0xe79779bbe73c743a6d523dce6f389ec1
(1)   Message-Authenticator = 0xc3244d7077e224250466b769dadc78f5
(1) Restoring &session-state
(1)   &session-state:Framed-MTU = 984
(1) # Executing section authorize from file /etc/freeradius/sites-enabled/test
(1)   authorize {
(1)     if (User-Name == "bob") {
(1)     if (User-Name == "bob")  -> FALSE
(1)     [mschap] = noop
(1) eap-test: Peer sent EAP Response (code 2) ID 171 length 6
(1) eap-test: No EAP Start, assuming it's an on-going EAP conversation
(1)     [eap-test] = updated
Not doing PAP as Auth-Type is already set.
(1)     [pap] = noop
(1)   } # authorize = updated
(1) Found Auth-Type = eap-test
(1) # Executing group from file /etc/freeradius/sites-enabled/test
(1)   authenticate {
(1) eap-test: Expiring EAP session with state 0xe79779bbe73c743a
(1) eap-test: Finished EAP session with state 0xe79779bbe73c743a
(1) eap-test: Previous EAP request found for state 0xe79779bbe73c743a, released from the list
(1) eap-test: Peer sent packet with method EAP NAK (3)
(1) eap-test: Found mutually acceptable type PEAP (25)
(1) eap-test: Calling submodule eap_peap to process data
(1) eap_peap: (TLS) Initiating new session
(1) eap-test: Sending EAP Request (code 1) ID 172 length 6
(1) eap-test: EAP session adding &reply:State = 0xe79779bbe63b603a
(1)     [eap-test] = handled
(1)   } # authenticate = handled
(1) Using Post-Auth-Type Challenge
(1) Post-Auth-Type sub-section not found.  Ignoring.
(1) session-state: Saving cached attributes
(1)   Framed-MTU = 984
(1) Sent Access-Challenge Id 156 from 127.0.0.1:1812 to 127.0.0.1:55096 length 64
(1)   EAP-Message = 0x01ac00061920
(1)   Message-Authenticator = 0x00000000000000000000000000000000
(1)   State = 0xe79779bbe63b603a6d523dce6f389ec1
(1) Finished request
Waking up in 4.9 seconds.
(2) Received Access-Request Id 157 from 127.0.0.1:55096 to 127.0.0.1:1812 length 445
(2)   User-Name = "anonymous"
(2)   NAS-IP-Address = 127.0.0.1
(2)   NAS-Identifier = "hostapd"
(2)   Called-Station-Id = "72-F4-1D-8E-DA-FB:"
(2)   NAS-Port-Type = Wireless-802.11
(2)   Service-Type = Framed-User
(2)   Calling-Station-Id = "52-54-00-12-34-57"
(2)   Connect-Info = "CONNECT 0Mbps 802.11b"
(2)   Acct-Session-Id = "77C1BC3F5142477E"
(2)   Framed-MTU = 1400
(2)   EAP-Message = 0x02ac01051980000000fb16030100f6010000f203030d0f84b2f01728d6554ab5d3536c2b335c6344203315c4d8eff7f4c1ec92f6ac201e79dad17ba5dc96ff9355540b982c0fa7a3841fccb0abb056fa65761d181dd8002813021301c02cc02bc030c02fc024c023c028c027c00ac009c014c013009d009c003d003c0035002f01000081000500050100000000002b0009080304030303020301000d001a001808040805080604010501020104030503020302020601060300230000000a00080006001d00170018003300260024001d002082e412b1bb803158da5b025a4dfda47b5b8dc63831428077c1b0e0f1f338e8040031000000170000ff01000100002d00020101
(2)   State = 0xe79779bbe63b603a6d523dce6f389ec1
(2)   Message-Authenticator = 0xdc94eee799d90c2b1ed38b5038276506
(2) Restoring &session-state
(2)   &session-state:Framed-MTU = 984
(2) # Executing section authorize from file /etc/freeradius/sites-enabled/test
(2)   authorize {
(2)     if (User-Name == "bob") {
(2)     if (User-Name == "bob")  -> FALSE
(2)     [mschap] = noop
(2) eap-test: Peer sent EAP Response (code 2) ID 172 length 261
(2) eap-test: Continuing tunnel setup
(2)     [eap-test] = ok
(2)     [pap] = noop
(2)   } # authorize = ok
(2) Found Auth-Type = eap-test
(2) # Executing group from file /etc/freeradius/sites-enabled/test
(2)   authenticate {
(2) eap-test: Expiring EAP session with state 0xe79779bbe63b603a
(2) eap-test: Finished EAP session with state 0xe79779bbe63b603a
(2) eap-test: Previous EAP request found for state 0xe79779bbe63b603a, released from the list
(2) eap-test: Peer sent packet with method EAP PEAP (25)
(2) eap-test: Calling submodule eap_peap to process data
(2) eap_peap: (TLS) EAP Peer says that the final record size will be 251 bytes
(2) eap_peap: (TLS) EAP Got all data (251 bytes)
(2) eap_peap: (TLS) Handshake state - before SSL initialization
(2) eap_peap: (TLS) Handshake state - Server before SSL initialization
(2) eap_peap: (TLS) Handshake state - Server before SSL initialization
(2) eap_peap: (TLS) recv TLS 1.3 Handshake, ClientHello
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read client hello
(2) eap_peap: (TLS) send TLS 1.3 Handshake, ServerHello
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write server hello
(2) eap_peap: (TLS) send TLS 1.3 ChangeCipherSpec
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write change cipher spec
(2) eap_peap: (TLS) send TLS 1.3 Handshake, EncryptedExtensions
(2) eap_peap: (TLS) Handshake state - Server TLSv1.3 write encrypted extensions
(2) eap_peap: (TLS) send TLS 1.3 Handshake, Certificate
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write certificate
(2) eap_peap: (TLS) send TLS 1.3 Handshake, CertificateVerify
(2) eap_peap: (TLS) Handshake state - Server TLSv1.3 write server certificate verify
(2) eap_peap: (TLS) send TLS 1.3 Handshake, Finished
(2) eap_peap: (TLS) Handshake state - Server SSLv3/TLS write finished
(2) eap_peap: (TLS) Handshake state - Server TLSv1.3 early data
(2) eap_peap: (TLS) Server : Need to read more data: TLSv1.3 early data
(2) eap_peap: (TLS) In Handshake Phase
(2) eap-test: Sending EAP Request (code 1) ID 173 length 994
(2) eap-test: EAP session adding &reply:State = 0xe79779bbe53a603a
(2)     [eap-test] = handled
(2)   } # authenticate = handled
(2) Using Post-Auth-Type Challenge
(2) Post-Auth-Type sub-section not found.  Ignoring.
(2) session-state: Saving cached attributes
(2)   Framed-MTU = 984
(2)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(2)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, ServerHello"
(2)   TLS-Session-Information = "(TLS) send TLS 1.3 ChangeCipherSpec"
(2)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, EncryptedExtensions"
(2)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Certificate"
(2)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, CertificateVerify"
(2)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(2) Sent Access-Challenge Id 157 from 127.0.0.1:1812 to 127.0.0.1:55096 length 1058
(2)   EAP-Message = 0x01ad03e219c000000b27160303007a0200007603033bc90144b662492edfec367a8caa4064369a1b6cdd17a4f29b16b6b173b0a331201e79dad17ba5dc96ff9355540b982c0fa7a3841fccb0abb056fa65761d181dd8130200002e002b0002030400330024001d0020556abf11aee3622b3493b81568e6fd9600837fefe2f44358a0821ae6aead67411403030001011703030017b566494fb1ca591228db1f6d19191171a90131d93d34ce17030309196a684ba554351ea1f4fffa8ef06b7d6bbdd01cea4a8cc87c084ce15017d875c94cb60d5f598a4f917e71f143cb4007967559d2babc6606f083d8ffd5eaeaadcfe716dfec9476295618bd2a4bdba9589c1db7000869d445d0eabc7ba25cd4b142f31d582840044a2a62d1f2dee691fcf193fb9a71a4e1bdc718c3d2f93f4137c82efd3c277045a04ad05754f0cbb924a9f408b5199dffe10511d337047242b3de884374bafd702d33acc9c4d59c9a7bd12edc3ae1e5578f54a550a9bf68b965c7e9f0084e55f8d9
(2)   Message-Authenticator = 0x00000000000000000000000000000000
(2)   State = 0xe79779bbe53a603a6d523dce6f389ec1
(2) Finished request
Waking up in 4.9 seconds.
(3) Received Access-Request Id 158 from 127.0.0.1:55096 to 127.0.0.1:1812 length 188
(3)   User-Name = "anonymous"
(3)   NAS-IP-Address = 127.0.0.1
(3)   NAS-Identifier = "hostapd"
(3)   Called-Station-Id = "72-F4-1D-8E-DA-FB:"
(3)   NAS-Port-Type = Wireless-802.11
(3)   Service-Type = Framed-User
(3)   Calling-Station-Id = "52-54-00-12-34-57"
(3)   Connect-Info = "CONNECT 0Mbps 802.11b"
(3)   Acct-Session-Id = "77C1BC3F5142477E"
(3)   Framed-MTU = 1400
(3)   EAP-Message = 0x02ad00061900
(3)   State = 0xe79779bbe53a603a6d523dce6f389ec1
(3)   Message-Authenticator = 0x7e68401436d5aae0d6a820c0122f4bba
(3) Restoring &session-state
(3)   &session-state:Framed-MTU = 984
(3)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, ServerHello"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 ChangeCipherSpec"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, EncryptedExtensions"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Certificate"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, CertificateVerify"
(3)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(3) # Executing section authorize from file /etc/freeradius/sites-enabled/test
(3)   authorize {
(3)     if (User-Name == "bob") {
(3)     if (User-Name == "bob")  -> FALSE
(3)     [mschap] = noop
(3) eap-test: Peer sent EAP Response (code 2) ID 173 length 6
(3) eap-test: Continuing tunnel setup
(3)     [eap-test] = ok
(3)     [pap] = noop
(3)   } # authorize = ok
(3) Found Auth-Type = eap-test
(3) # Executing group from file /etc/freeradius/sites-enabled/test
(3)   authenticate {
(3) eap-test: Expiring EAP session with state 0xe79779bbe53a603a
(3) eap-test: Finished EAP session with state 0xe79779bbe53a603a
(3) eap-test: Previous EAP request found for state 0xe79779bbe53a603a, released from the list
(3) eap-test: Peer sent packet with method EAP PEAP (25)
(3) eap-test: Calling submodule eap_peap to process data
(3) eap_peap: (TLS) Peer ACKed our handshake fragment
(3) eap-test: Sending EAP Request (code 1) ID 174 length 990
(3) eap-test: EAP session adding &reply:State = 0xe79779bbe439603a
(3)     [eap-test] = handled
(3)   } # authenticate = handled
(3) Using Post-Auth-Type Challenge
(3) Post-Auth-Type sub-section not found.  Ignoring.
(3) session-state: Saving cached attributes
(3)   Framed-MTU = 984
(3)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(3)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, ServerHello"
(3)   TLS-Session-Information = "(TLS) send TLS 1.3 ChangeCipherSpec"
(3)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, EncryptedExtensions"
(3)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Certificate"
(3)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, CertificateVerify"
(3)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(3) Sent Access-Challenge Id 158 from 127.0.0.1:1812 to 127.0.0.1:55096 length 1054
(3)   EAP-Message = 0x01ae03de1940a043f64174a9d3038c511c6098534a90eec30ae763b2e0821fb8b5db49b5acf4e7b55b1ecf676f5625cc87bd2fcd6a6b67cf19a1c07e1be2412213c435b6f3b804287c5326d00dfd6d3f18782783935b1db8b7b8025c431bba838d787a4d722c8a6d2144f4cf0162fc2d14e3b011841d9c195face907135fcb64378d5db89fcc7bef61ab10a3325613f54f2142d0aba9e0551043b2da41f7b414af3c65d8bc0668dc729975d451095622429456d6bc78ea243760ec5804ec655d93ac595aedb4f778de4f6f021077c9e75dc69deb471c8589ead5353de1960c457968cbbd51049a2eccad832181c5634476d4c80596b126fc1b2aa1f1c407584dd8a116d99150baaa40e5f5bd045d95f29e9d60c8b33e5fbf0e18f221c7d7e9e8103bb8e6029acd4b141d3adca5e5a0a2161d7a5bb3b829d031b919822e1804eacf1f48962480ba4312a63ccd610d9855138e99dec54b2630640a4a9be97a3e08b0d17569066af42de46826c10f550128e678f23c2d6e74
(3)   Message-Authenticator = 0x00000000000000000000000000000000
(3)   State = 0xe79779bbe439603a6d523dce6f389ec1
(3) Finished request
Waking up in 4.9 seconds.
(4) Received Access-Request Id 159 from 127.0.0.1:55096 to 127.0.0.1:1812 length 188
(4)   User-Name = "anonymous"
(4)   NAS-IP-Address = 127.0.0.1
(4)   NAS-Identifier = "hostapd"
(4)   Called-Station-Id = "72-F4-1D-8E-DA-FB:"
(4)   NAS-Port-Type = Wireless-802.11
(4)   Service-Type = Framed-User
(4)   Calling-Station-Id = "52-54-00-12-34-57"
(4)   Connect-Info = "CONNECT 0Mbps 802.11b"
(4)   Acct-Session-Id = "77C1BC3F5142477E"
(4)   Framed-MTU = 1400
(4)   EAP-Message = 0x02ae00061900
(4)   State = 0xe79779bbe439603a6d523dce6f389ec1
(4)   Message-Authenticator = 0xd649f665c06597012bc24aa791f8b569
(4) Restoring &session-state
(4)   &session-state:Framed-MTU = 984
(4)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, ServerHello"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 ChangeCipherSpec"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, EncryptedExtensions"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Certificate"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, CertificateVerify"
(4)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(4) # Executing section authorize from file /etc/freeradius/sites-enabled/test
(4)   authorize {
(4)     if (User-Name == "bob") {
(4)     if (User-Name == "bob")  -> FALSE
(4)     [mschap] = noop
(4) eap-test: Peer sent EAP Response (code 2) ID 174 length 6
(4) eap-test: Continuing tunnel setup
(4)     [eap-test] = ok
(4)     [pap] = noop
(4)   } # authorize = ok
(4) Found Auth-Type = eap-test
(4) # Executing group from file /etc/freeradius/sites-enabled/test
(4)   authenticate {
(4) eap-test: Expiring EAP session with state 0xe79779bbe439603a
(4) eap-test: Finished EAP session with state 0xe79779bbe439603a
(4) eap-test: Previous EAP request found for state 0xe79779bbe439603a, released from the list
(4) eap-test: Peer sent packet with method EAP PEAP (25)
(4) eap-test: Calling submodule eap_peap to process data
(4) eap_peap: (TLS) Peer ACKed our handshake fragment
(4) eap-test: Sending EAP Request (code 1) ID 175 length 893
(4) eap-test: EAP session adding &reply:State = 0xe79779bbe338603a
(4)     [eap-test] = handled
(4)   } # authenticate = handled
(4) Using Post-Auth-Type Challenge
(4) Post-Auth-Type sub-section not found.  Ignoring.
(4) session-state: Saving cached attributes
(4)   Framed-MTU = 984
(4)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(4)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, ServerHello"
(4)   TLS-Session-Information = "(TLS) send TLS 1.3 ChangeCipherSpec"
(4)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, EncryptedExtensions"
(4)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Certificate"
(4)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, CertificateVerify"
(4)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(4) Sent Access-Challenge Id 159 from 127.0.0.1:1812 to 127.0.0.1:55096 length 957
(4)   EAP-Message = 0x01af037d19003c559385df022378fcbacae7229dab7077a8a2afb779dbcb3b59b7f2137bd3947334d554019cf56086a887f4e15abb0815c32076bb6ccf692b328b4c564b769f334e2655b876fc0573979cf0b8ad77f0ae538e0958f80ccbc15d3325fd4da62c8929f62d1f76e6d02983596944f7adfc6f754762e864e3505b60bbc72378317d3547a786f089563bd9efbfa1acc9c09703d902adfdde6ea083fd0ece091f30e46c43e67e5ebdfd68deb874e70b3b10a45d7187777a8ff4b097fe821b8893a3231eb09fb204192b93dafd85b0690bd81da101478c11ea9371dd4b63b41e48ff2c8e4e1434c93701c24b8ffad732e19f8d7489e80fd8131ca23463d97bd16bbf25bd9a64cf95e1d12db1895efd2a34a2b0784ee4269f7548c990e0915b233f560ab386389ce6ec62e4fc1b51a5a941f338d1811d8d255098a9cd27e41858242a86e0307b96c5c6a9dc5eb4fd7c5c290b1b2aecfcd40ec136ec145994f900beee8d5c224537da66bfefb15180bc138546becb
(4)   Message-Authenticator = 0x00000000000000000000000000000000
(4)   State = 0xe79779bbe338603a6d523dce6f389ec1
(4) Finished request
Waking up in 4.9 seconds.
(5) Received Access-Request Id 160 from 127.0.0.1:55096 to 127.0.0.1:1812 length 272
(5)   User-Name = "anonymous"
(5)   NAS-IP-Address = 127.0.0.1
(5)   NAS-Identifier = "hostapd"
(5)   Called-Station-Id = "72-F4-1D-8E-DA-FB:"
(5)   NAS-Port-Type = Wireless-802.11
(5)   Service-Type = Framed-User
(5)   Calling-Station-Id = "52-54-00-12-34-57"
(5)   Connect-Info = "CONNECT 0Mbps 802.11b"
(5)   Acct-Session-Id = "77C1BC3F5142477E"
(5)   Framed-MTU = 1400
(5)   EAP-Message = 0x02af005a1980000000501403030001011703030045a4d589ab7fcecace214d5a0f0205b6d13abe8d3cf5f6c8d274120971a4ac5171881f364d7f537b3a2686fa8f1ea8a1c5b10d34b7105407b274d89d80f665acb8bc4aaf0d25
(5)   State = 0xe79779bbe338603a6d523dce6f389ec1
(5)   Message-Authenticator = 0xe2c788217bba1a7d1daaa6cf9cd13677
(5) Restoring &session-state
(5)   &session-state:Framed-MTU = 984
(5)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, ServerHello"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 ChangeCipherSpec"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, EncryptedExtensions"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Certificate"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, CertificateVerify"
(5)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(5) # Executing section authorize from file /etc/freeradius/sites-enabled/test
(5)   authorize {
(5)     if (User-Name == "bob") {
(5)     if (User-Name == "bob")  -> FALSE
(5)     [mschap] = noop
(5) eap-test: Peer sent EAP Response (code 2) ID 175 length 90
(5) eap-test: Continuing tunnel setup
(5)     [eap-test] = ok
(5)     [pap] = noop
(5)   } # authorize = ok
(5) Found Auth-Type = eap-test
(5) # Executing group from file /etc/freeradius/sites-enabled/test
(5)   authenticate {
(5) eap-test: Expiring EAP session with state 0xe79779bbe338603a
(5) eap-test: Finished EAP session with state 0xe79779bbe338603a
(5) eap-test: Previous EAP request found for state 0xe79779bbe338603a, released from the list
(5) eap-test: Peer sent packet with method EAP PEAP (25)
(5) eap-test: Calling submodule eap_peap to process data
(5) eap_peap: (TLS) EAP Peer says that the final record size will be 80 bytes
(5) eap_peap: (TLS) EAP Got all data (80 bytes)
(5) eap_peap: (TLS) Handshake state - Server TLSv1.3 early data
(5) eap_peap: (TLS) recv TLS 1.3 Handshake, Finished
(5) eap_peap: (TLS) Handshake state - Server SSLv3/TLS read finished
(5) eap_peap: (TLS) Handshake state - SSL negotiation finished successfully
(5) eap_peap: (TLS) Connection Established
(5) eap_peap:   TLS-Session-Cipher-Suite = "TLS_AES_256_GCM_SHA384"
(5) eap_peap:   TLS-Session-Version = "TLS 1.3"
(5) eap_peap: (TLS) Application data.
(5) eap_peap: WARNING: (TLS) EAP No information in cached session 
(5) eap_peap: Session established.  Decoding tunneled attributes
(5) eap_peap: PEAP state TUNNEL ESTABLISHED
(5) eap_peap: (TLS) send TLS 1.3 Handshake, Finished
(5) eap-test: Sending EAP Request (code 1) ID 176 length 33
(5) eap-test: EAP session adding &reply:State = 0xe79779bbe227603a
(5)     [eap-test] = handled
(5)   } # authenticate = handled
(5) Using Post-Auth-Type Challenge
(5) Post-Auth-Type sub-section not found.  Ignoring.
(5) session-state: Saving cached attributes
(5)   Framed-MTU = 984
(5)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(5)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, ServerHello"
(5)   TLS-Session-Information = "(TLS) send TLS 1.3 ChangeCipherSpec"
(5)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, EncryptedExtensions"
(5)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Certificate"
(5)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, CertificateVerify"
(5)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(5)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, Finished"
(5)   TLS-Session-Cipher-Suite = "TLS_AES_256_GCM_SHA384"
(5)   TLS-Session-Version = "TLS 1.3"
(5)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(5) Sent Access-Challenge Id 160 from 127.0.0.1:1812 to 127.0.0.1:55096 length 91
(5)   EAP-Message = 0x01b000211900170303001690da474becfabb56997fc01b4da9346374d3327010eb
(5)   Message-Authenticator = 0x00000000000000000000000000000000
(5)   State = 0xe79779bbe227603a6d523dce6f389ec1
(5) Finished request
Waking up in 4.9 seconds.
(6) Received Access-Request Id 161 from 127.0.0.1:55096 to 127.0.0.1:1812 length 214
(6)   User-Name = "anonymous"
(6)   NAS-IP-Address = 127.0.0.1
(6)   NAS-Identifier = "hostapd"
(6)   Called-Station-Id = "72-F4-1D-8E-DA-FB:"
(6)   NAS-Port-Type = Wireless-802.11
(6)   Service-Type = Framed-User
(6)   Calling-Station-Id = "52-54-00-12-34-57"
(6)   Connect-Info = "CONNECT 0Mbps 802.11b"
(6)   Acct-Session-Id = "77C1BC3F5142477E"
(6)   Framed-MTU = 1400
(6)   EAP-Message = 0x02b00020190017030300153b81b77dcb048255efc0455f81bd8f7afa246c47dd
(6)   State = 0xe79779bbe227603a6d523dce6f389ec1
(6)   Message-Authenticator = 0xc2cf1d863255e2d8ac5a63af947ceed0
(6) Restoring &session-state
(6)   &session-state:Framed-MTU = 984
(6)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, ServerHello"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 ChangeCipherSpec"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, EncryptedExtensions"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Certificate"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, CertificateVerify"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(6)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, Finished"
(6)   &session-state:TLS-Session-Cipher-Suite = "TLS_AES_256_GCM_SHA384"
(6)   &session-state:TLS-Session-Version = "TLS 1.3"
(6)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(6) # Executing section authorize from file /etc/freeradius/sites-enabled/test
(6)   authorize {
(6)     if (User-Name == "bob") {
(6)     if (User-Name == "bob")  -> FALSE
(6)     [mschap] = noop
(6) eap-test: Peer sent EAP Response (code 2) ID 176 length 32
(6) eap-test: Continuing tunnel setup
(6)     [eap-test] = ok
(6)     [pap] = noop
(6)   } # authorize = ok
(6) Found Auth-Type = eap-test
(6) # Executing group from file /etc/freeradius/sites-enabled/test
(6)   authenticate {
(6) eap-test: Expiring EAP session with state 0xe79779bbe227603a
(6) eap-test: Finished EAP session with state 0xe79779bbe227603a
(6) eap-test: Previous EAP request found for state 0xe79779bbe227603a, released from the list
(6) eap-test: Peer sent packet with method EAP PEAP (25)
(6) eap-test: Calling submodule eap_peap to process data
(6) eap_peap: (TLS) EAP Done initial handshake
(6) eap_peap: (TLS) recv TLS 1.3 Handshake, Finished
(6) eap_peap: Session established.  Decoding tunneled attributes
(6) eap_peap: PEAP state WAITING FOR INNER IDENTITY
(6) eap_peap: Identity - bob
(6) eap_peap: Got inner identity 'bob'
(6) eap_peap: Setting default EAP type for tunneled EAP session
(6) eap_peap: Got tunneled request
(6) eap_peap:   EAP-Message = 0x02b0000801626f62
(6) eap_peap: Setting User-Name to bob
(6) eap_peap: Sending tunneled request to eap-test-inner
(6) eap_peap:   EAP-Message = 0x02b0000801626f62
(6) eap_peap:   FreeRADIUS-Proxied-To = 127.0.0.1
(6) eap_peap:   User-Name = "bob"
(6) Virtual server eap-test-inner received request
(6)   EAP-Message = 0x02b0000801626f62
(6)   FreeRADIUS-Proxied-To = 127.0.0.1
(6)   User-Name = "bob"
(6) server eap-test-inner {
(6)   # Executing section authorize from file /etc/freeradius/sites-enabled/eap-test-tunnel
(6)     authorize {
(6)       policy filter_username {
(6)         if (&User-Name) {
(6)         if (&User-Name)  -> TRUE
(6)         if (&User-Name)  {
(6)           if (&User-Name =~ / /) {
(6)           if (&User-Name =~ / /)  -> FALSE
(6)           if (&User-Name =~ /@[^@]*@/ ) {
(6)           if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(6)           if (&User-Name =~ /\.\./ ) {
(6)           if (&User-Name =~ /\.\./ )  -> FALSE
(6)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(6)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(6)           if (&User-Name =~ /\.$/)  {
(6)           if (&User-Name =~ /\.$/)   -> FALSE
(6)           if (&User-Name =~ /@\./)  {
(6)           if (&User-Name =~ /@\./)   -> FALSE
(6)         } # if (&User-Name)  = notfound
(6)       } # policy filter_username = notfound
(6)       if (User-Name == "bob") {
(6)       if (User-Name == "bob")  -> TRUE
(6)       if (User-Name == "bob")  {
(6)         update control {
(6)           Cleartext-Password := "bob"
(6)         } # update control = noop
(6)       } # if (User-Name == "bob")  = noop
(6)       [mschap] = noop
(6) suffix: Checking for suffix after "@"
(6) suffix: No '@' in User-Name = "bob", looking up realm NULL
(6) suffix: No such realm "NULL"
(6)       [suffix] = noop
(6)       update control {
(6)         &Proxy-To-Realm := LOCAL
(6)       } # update control = noop
(6) eap-test: Peer sent EAP Response (code 2) ID 176 length 8
(6) eap-test: EAP-Identity reply, returning 'ok' so we can short-circuit the rest of authorize
(6)       [eap-test] = ok
(6)     } # authorize = ok
(6)   Found Auth-Type = eap-test
(6)   # Executing group from file /etc/freeradius/sites-enabled/eap-test-tunnel
(6)     authenticate {
(6) eap-test: Peer sent packet with method EAP Identity (1)
(6) eap-test: Calling submodule eap_mschapv2 to process data
(6) eap_mschapv2: Issuing Challenge
(6) eap-test: Sending EAP Request (code 1) ID 177 length 43
(6) eap-test: EAP session adding &reply:State = 0x7b1e4b1a7baf510c
(6)       [eap-test] = handled
(6)     } # authenticate = handled
(6) } # server eap-test-inner
(6) Virtual server sending reply
(6)   EAP-Message = 0x01b1002b1a01b1002610b143cd581cced37d6968cd0c6a824bcc667265657261646975732d332e302e3236
(6)   Message-Authenticator = 0x00000000000000000000000000000000
(6)   State = 0x7b1e4b1a7baf510c9e14744d5d13e509
(6) eap_peap: Got tunneled reply code 11
(6) eap_peap:   EAP-Message = 0x01b1002b1a01b1002610b143cd581cced37d6968cd0c6a824bcc667265657261646975732d332e302e3236
(6) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(6) eap_peap:   State = 0x7b1e4b1a7baf510c9e14744d5d13e509
(6) eap_peap: Got tunneled reply RADIUS code 11
(6) eap_peap:   EAP-Message = 0x01b1002b1a01b1002610b143cd581cced37d6968cd0c6a824bcc667265657261646975732d332e302e3236
(6) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(6) eap_peap:   State = 0x7b1e4b1a7baf510c9e14744d5d13e509
(6) eap_peap: Got tunneled Access-Challenge
(6) eap_peap: (TLS) send TLS 1.3 Handshake, Finished
(6) eap-test: Sending EAP Request (code 1) ID 177 length 67
(6) eap-test: EAP session adding &reply:State = 0xe79779bbe126603a
(6)     [eap-test] = handled
(6)   } # authenticate = handled
(6) Using Post-Auth-Type Challenge
(6) Post-Auth-Type sub-section not found.  Ignoring.
(6) session-state: Saving cached attributes
(6)   Framed-MTU = 984
(6)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(6)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, ServerHello"
(6)   TLS-Session-Information = "(TLS) send TLS 1.3 ChangeCipherSpec"
(6)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, EncryptedExtensions"
(6)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Certificate"
(6)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, CertificateVerify"
(6)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(6)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, Finished"
(6)   TLS-Session-Cipher-Suite = "TLS_AES_256_GCM_SHA384"
(6)   TLS-Session-Version = "TLS 1.3"
(6)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(6)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, Finished"
(6)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(6) Sent Access-Challenge Id 161 from 127.0.0.1:1812 to 127.0.0.1:55096 length 125
(6)   EAP-Message = 0x01b10043190017030300383d4e49eb3d8460c66b9dcca15185b0fe4b9f5868f191d79a18a401c2eae7099e3f3e259741c7c28a6a2444aacbe19b8abb99eae1a07c4fc4
(6)   Message-Authenticator = 0x00000000000000000000000000000000
(6)   State = 0xe79779bbe126603a6d523dce6f389ec1
(6) Finished request
Waking up in 4.9 seconds.
(7) Received Access-Request Id 162 from 127.0.0.1:55096 to 127.0.0.1:1812 length 268
(7)   User-Name = "anonymous"
(7)   NAS-IP-Address = 127.0.0.1
(7)   NAS-Identifier = "hostapd"
(7)   Called-Station-Id = "72-F4-1D-8E-DA-FB:"
(7)   NAS-Port-Type = Wireless-802.11
(7)   Service-Type = Framed-User
(7)   Calling-Station-Id = "52-54-00-12-34-57"
(7)   Connect-Info = "CONNECT 0Mbps 802.11b"
(7)   Acct-Session-Id = "77C1BC3F5142477E"
(7)   Framed-MTU = 1400
(7)   EAP-Message = 0x02b100561900170303004b0f1fb7cbf643278b25e8f60ec85a6e4e391ab99b42fed584106f82876bebaba9c45ad3886b8a7287c89ee1b963dc852588eab7297aefb0d88de944c4a835112bcc28c76db0b1c1edbb2625
(7)   State = 0xe79779bbe126603a6d523dce6f389ec1
(7)   Message-Authenticator = 0x3d4a77c90f4e4ced80fb905c221e42ec
(7) Restoring &session-state
(7)   &session-state:Framed-MTU = 984
(7)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, ServerHello"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 ChangeCipherSpec"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, EncryptedExtensions"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Certificate"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, CertificateVerify"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(7)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, Finished"
(7)   &session-state:TLS-Session-Cipher-Suite = "TLS_AES_256_GCM_SHA384"
(7)   &session-state:TLS-Session-Version = "TLS 1.3"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(7)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, Finished"
(7)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(7) # Executing section authorize from file /etc/freeradius/sites-enabled/test
(7)   authorize {
(7)     if (User-Name == "bob") {
(7)     if (User-Name == "bob")  -> FALSE
(7)     [mschap] = noop
(7) eap-test: Peer sent EAP Response (code 2) ID 177 length 86
(7) eap-test: Continuing tunnel setup
(7)     [eap-test] = ok
(7)     [pap] = noop
(7)   } # authorize = ok
(7) Found Auth-Type = eap-test
(7) # Executing group from file /etc/freeradius/sites-enabled/test
(7)   authenticate {
(7) eap-test: Expiring EAP session with state 0x7b1e4b1a7baf510c
(7) eap-test: Finished EAP session with state 0xe79779bbe126603a
(7) eap-test: Previous EAP request found for state 0xe79779bbe126603a, released from the list
(7) eap-test: Peer sent packet with method EAP PEAP (25)
(7) eap-test: Calling submodule eap_peap to process data
(7) eap_peap: (TLS) EAP Done initial handshake
(7) eap_peap: (TLS) recv TLS 1.3 Handshake, Finished
(7) eap_peap: Session established.  Decoding tunneled attributes
(7) eap_peap: PEAP state phase2
(7) eap_peap: EAP method MSCHAPv2 (26)
(7) eap_peap: Got tunneled request
(7) eap_peap:   EAP-Message = 0x02b1003e1a02b1003931c8814b47cfbc8d7380c734a1d2367cc40000000000000000f64973544692e3055804ba7fd2d84dc30a729b06bbe053c300626f62
(7) eap_peap: Setting User-Name to bob
(7) eap_peap: Sending tunneled request to eap-test-inner
(7) eap_peap:   EAP-Message = 0x02b1003e1a02b1003931c8814b47cfbc8d7380c734a1d2367cc40000000000000000f64973544692e3055804ba7fd2d84dc30a729b06bbe053c300626f62
(7) eap_peap:   FreeRADIUS-Proxied-To = 127.0.0.1
(7) eap_peap:   User-Name = "bob"
(7) eap_peap:   State = 0x7b1e4b1a7baf510c9e14744d5d13e509
(7) Virtual server eap-test-inner received request
(7)   EAP-Message = 0x02b1003e1a02b1003931c8814b47cfbc8d7380c734a1d2367cc40000000000000000f64973544692e3055804ba7fd2d84dc30a729b06bbe053c300626f62
(7)   FreeRADIUS-Proxied-To = 127.0.0.1
(7)   User-Name = "bob"
(7)   State = 0x7b1e4b1a7baf510c9e14744d5d13e509
(7) server eap-test-inner {
(7)   session-state: No cached attributes
(7)   # Executing section authorize from file /etc/freeradius/sites-enabled/eap-test-tunnel
(7)     authorize {
(7)       policy filter_username {
(7)         if (&User-Name) {
(7)         if (&User-Name)  -> TRUE
(7)         if (&User-Name)  {
(7)           if (&User-Name =~ / /) {
(7)           if (&User-Name =~ / /)  -> FALSE
(7)           if (&User-Name =~ /@[^@]*@/ ) {
(7)           if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(7)           if (&User-Name =~ /\.\./ ) {
(7)           if (&User-Name =~ /\.\./ )  -> FALSE
(7)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(7)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(7)           if (&User-Name =~ /\.$/)  {
(7)           if (&User-Name =~ /\.$/)   -> FALSE
(7)           if (&User-Name =~ /@\./)  {
(7)           if (&User-Name =~ /@\./)   -> FALSE
(7)         } # if (&User-Name)  = notfound
(7)       } # policy filter_username = notfound
(7)       if (User-Name == "bob") {
(7)       if (User-Name == "bob")  -> TRUE
(7)       if (User-Name == "bob")  {
(7)         update control {
(7)           Cleartext-Password := "bob"
(7)         } # update control = noop
(7)       } # if (User-Name == "bob")  = noop
(7)       [mschap] = noop
(7) suffix: Checking for suffix after "@"
(7) suffix: No '@' in User-Name = "bob", looking up realm NULL
(7) suffix: No such realm "NULL"
(7)       [suffix] = noop
(7)       update control {
(7)         &Proxy-To-Realm := LOCAL
(7)       } # update control = noop
(7) eap-test: Peer sent EAP Response (code 2) ID 177 length 62
(7) eap-test: No EAP Start, assuming it's an on-going EAP conversation
(7)       [eap-test] = updated
(7)       [files] = noop
(7) pap: WARNING: Auth-Type already set.  Not setting to PAP
(7)       [pap] = noop
(7)     } # authorize = updated
(7)   Found Auth-Type = eap-test
(7)   # Executing group from file /etc/freeradius/sites-enabled/eap-test-tunnel
(7)     authenticate {
(7) eap-test: Expiring EAP session with state 0x7b1e4b1a7baf510c
(7) eap-test: Finished EAP session with state 0x7b1e4b1a7baf510c
(7) eap-test: Previous EAP request found for state 0x7b1e4b1a7baf510c, released from the list
(7) eap-test: Peer sent packet with method EAP MSCHAPv2 (26)
(7) eap-test: Calling submodule eap_mschapv2 to process data
(7) eap_mschapv2: # Executing group from file /etc/freeradius/sites-enabled/eap-test-tunnel
(7) eap_mschapv2:   authenticate {
(7) mschap: Found Cleartext-Password, hashing to create NT-Password
(7) mschap: Creating challenge hash with username: bob
(7) mschap: Client is using MS-CHAPv2
(7) mschap: Adding MS-CHAPv2 MPPE keys
(7) eap_mschapv2:     [mschap] = ok
(7) eap_mschapv2:   } # authenticate = ok
(7) eap_mschapv2: MSCHAP Success
(7) eap-test: Sending EAP Request (code 1) ID 178 length 51
(7) eap-test: EAP session adding &reply:State = 0x7b1e4b1a7aac510c
(7)       [eap-test] = handled
(7)     } # authenticate = handled
(7) } # server eap-test-inner
(7) Virtual server sending reply
(7)   EAP-Message = 0x01b200331a03b1002e533d42363935354646333741314646443235344434394132424630443131344532343633343634344535
(7)   Message-Authenticator = 0x00000000000000000000000000000000
(7)   State = 0x7b1e4b1a7aac510c9e14744d5d13e509
(7) eap_peap: Got tunneled reply code 11
(7) eap_peap:   EAP-Message = 0x01b200331a03b1002e533d42363935354646333741314646443235344434394132424630443131344532343633343634344535
(7) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(7) eap_peap:   State = 0x7b1e4b1a7aac510c9e14744d5d13e509
(7) eap_peap: Got tunneled reply RADIUS code 11
(7) eap_peap:   EAP-Message = 0x01b200331a03b1002e533d42363935354646333741314646443235344434394132424630443131344532343633343634344535
(7) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(7) eap_peap:   State = 0x7b1e4b1a7aac510c9e14744d5d13e509
(7) eap_peap: Got tunneled Access-Challenge
(7) eap_peap: (TLS) send TLS 1.3 Handshake, Finished
(7) eap-test: Sending EAP Request (code 1) ID 178 length 75
(7) eap-test: EAP session adding &reply:State = 0xe79779bbe025603a
(7)     [eap-test] = handled
(7)   } # authenticate = handled
(7) Using Post-Auth-Type Challenge
(7) Post-Auth-Type sub-section not found.  Ignoring.
(7) session-state: Saving cached attributes
(7)   Framed-MTU = 984
(7)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(7)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, ServerHello"
(7)   TLS-Session-Information = "(TLS) send TLS 1.3 ChangeCipherSpec"
(7)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, EncryptedExtensions"
(7)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Certificate"
(7)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, CertificateVerify"
(7)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(7)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, Finished"
(7)   TLS-Session-Cipher-Suite = "TLS_AES_256_GCM_SHA384"
(7)   TLS-Session-Version = "TLS 1.3"
(7)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(7)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, Finished"
(7)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(7)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, Finished"
(7)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(7) Sent Access-Challenge Id 162 from 127.0.0.1:1812 to 127.0.0.1:55096 length 133
(7)   EAP-Message = 0x01b2004b190017030300408ff17f94ba169df4f689a0ac1bc5e9b97e772c191b003960afc3cd64644edae2f1683e5b692bcbd4dccf1db670d8784d04932854b4f8d3d37b526c89e3a2d1b6
(7)   Message-Authenticator = 0x00000000000000000000000000000000
(7)   State = 0xe79779bbe025603a6d523dce6f389ec1
(7) Finished request
Waking up in 4.9 seconds.
(8) Received Access-Request Id 163 from 127.0.0.1:55096 to 127.0.0.1:1812 length 212
(8)   User-Name = "anonymous"
(8)   NAS-IP-Address = 127.0.0.1
(8)   NAS-Identifier = "hostapd"
(8)   Called-Station-Id = "72-F4-1D-8E-DA-FB:"
(8)   NAS-Port-Type = Wireless-802.11
(8)   Service-Type = Framed-User
(8)   Calling-Station-Id = "52-54-00-12-34-57"
(8)   Connect-Info = "CONNECT 0Mbps 802.11b"
(8)   Acct-Session-Id = "77C1BC3F5142477E"
(8)   Framed-MTU = 1400
(8)   EAP-Message = 0x02b2001e19001703030013587de5b46fe1011520366a53a6a47be1f175c8
(8)   State = 0xe79779bbe025603a6d523dce6f389ec1
(8)   Message-Authenticator = 0x7d277cf9d218c6ce368f423c23904a23
(8) Restoring &session-state
(8)   &session-state:Framed-MTU = 984
(8)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, ServerHello"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 ChangeCipherSpec"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, EncryptedExtensions"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Certificate"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, CertificateVerify"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(8)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, Finished"
(8)   &session-state:TLS-Session-Cipher-Suite = "TLS_AES_256_GCM_SHA384"
(8)   &session-state:TLS-Session-Version = "TLS 1.3"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(8)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, Finished"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(8)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, Finished"
(8)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(8) # Executing section authorize from file /etc/freeradius/sites-enabled/test
(8)   authorize {
(8)     if (User-Name == "bob") {
(8)     if (User-Name == "bob")  -> FALSE
(8)     [mschap] = noop
(8) eap-test: Peer sent EAP Response (code 2) ID 178 length 30
(8) eap-test: Continuing tunnel setup
(8)     [eap-test] = ok
(8)     [pap] = noop
(8)   } # authorize = ok
(8) Found Auth-Type = eap-test
(8) # Executing group from file /etc/freeradius/sites-enabled/test
(8)   authenticate {
(8) eap-test: Expiring EAP session with state 0x7b1e4b1a7aac510c
(8) eap-test: Finished EAP session with state 0xe79779bbe025603a
(8) eap-test: Previous EAP request found for state 0xe79779bbe025603a, released from the list
(8) eap-test: Peer sent packet with method EAP PEAP (25)
(8) eap-test: Calling submodule eap_peap to process data
(8) eap_peap: (TLS) EAP Done initial handshake
(8) eap_peap: (TLS) recv TLS 1.3 Handshake, Finished
(8) eap_peap: Session established.  Decoding tunneled attributes
(8) eap_peap: PEAP state phase2
(8) eap_peap: EAP method MSCHAPv2 (26)
(8) eap_peap: Got tunneled request
(8) eap_peap:   EAP-Message = 0x02b200061a03
(8) eap_peap: Setting User-Name to bob
(8) eap_peap: Sending tunneled request to eap-test-inner
(8) eap_peap:   EAP-Message = 0x02b200061a03
(8) eap_peap:   FreeRADIUS-Proxied-To = 127.0.0.1
(8) eap_peap:   User-Name = "bob"
(8) eap_peap:   State = 0x7b1e4b1a7aac510c9e14744d5d13e509
(8) Virtual server eap-test-inner received request
(8)   EAP-Message = 0x02b200061a03
(8)   FreeRADIUS-Proxied-To = 127.0.0.1
(8)   User-Name = "bob"
(8)   State = 0x7b1e4b1a7aac510c9e14744d5d13e509
(8) server eap-test-inner {
(8)   session-state: No cached attributes
(8)   # Executing section authorize from file /etc/freeradius/sites-enabled/eap-test-tunnel
(8)     authorize {
(8)       policy filter_username {
(8)         if (&User-Name) {
(8)         if (&User-Name)  -> TRUE
(8)         if (&User-Name)  {
(8)           if (&User-Name =~ / /) {
(8)           if (&User-Name =~ / /)  -> FALSE
(8)           if (&User-Name =~ /@[^@]*@/ ) {
(8)           if (&User-Name =~ /@[^@]*@/ )  -> FALSE
(8)           if (&User-Name =~ /\.\./ ) {
(8)           if (&User-Name =~ /\.\./ )  -> FALSE
(8)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))  {
(8)           if ((&User-Name =~ /@/) && (&User-Name !~ /@(.+)\.(.+)$/))   -> FALSE
(8)           if (&User-Name =~ /\.$/)  {
(8)           if (&User-Name =~ /\.$/)   -> FALSE
(8)           if (&User-Name =~ /@\./)  {
(8)           if (&User-Name =~ /@\./)   -> FALSE
(8)         } # if (&User-Name)  = notfound
(8)       } # policy filter_username = notfound
(8)       if (User-Name == "bob") {
(8)       if (User-Name == "bob")  -> TRUE
(8)       if (User-Name == "bob")  {
(8)         update control {
(8)           Cleartext-Password := "bob"
(8)         } # update control = noop
(8)       } # if (User-Name == "bob")  = noop
(8)       [mschap] = noop
(8) suffix: Checking for suffix after "@"
(8) suffix: No '@' in User-Name = "bob", looking up realm NULL
(8) suffix: No such realm "NULL"
(8)       [suffix] = noop
(8)       update control {
(8)         &Proxy-To-Realm := LOCAL
(8)       } # update control = noop
(8) eap-test: Peer sent EAP Response (code 2) ID 178 length 6
(8) eap-test: No EAP Start, assuming it's an on-going EAP conversation
(8)       [eap-test] = updated
(8)       [files] = noop
(8) pap: WARNING: Auth-Type already set.  Not setting to PAP
(8)       [pap] = noop
(8)     } # authorize = updated
(8)   Found Auth-Type = eap-test
(8)   # Executing group from file /etc/freeradius/sites-enabled/eap-test-tunnel
(8)     authenticate {
(8) eap-test: Expiring EAP session with state 0x7b1e4b1a7aac510c
(8) eap-test: Finished EAP session with state 0x7b1e4b1a7aac510c
(8) eap-test: Previous EAP request found for state 0x7b1e4b1a7aac510c, released from the list
(8) eap-test: Peer sent packet with method EAP MSCHAPv2 (26)
(8) eap-test: Calling submodule eap_mschapv2 to process data
(8) eap-test: Sending EAP Success (code 3) ID 178 length 4
(8) eap-test: Freeing handler
(8)       [eap-test] = ok
(8)     } # authenticate = ok
(8)   # Executing section post-auth from file /etc/freeradius/sites-enabled/eap-test-tunnel
(8)     post-auth {
(8)       update reply {
(8)         &Tunnel-Private-Group-ID = "test"
(8)       } # update reply = noop
(8)     } # post-auth = noop
(8) } # server eap-test-inner
(8) Virtual server sending reply
(8)   MS-MPPE-Encryption-Policy = Encryption-Allowed
(8)   MS-MPPE-Encryption-Types = RC4-40or128-bit-Allowed
(8)   MS-MPPE-Send-Key = 0x805f5208cc4993d0444b362c38222ed7
(8)   MS-MPPE-Recv-Key = 0xdb30a22b61148f386dde2b522c198a31
(8)   EAP-Message = 0x03b20004
(8)   Message-Authenticator = 0x00000000000000000000000000000000
(8)   User-Name = "bob"
(8)   Tunnel-Private-Group-Id = "test"
(8) eap_peap: Got tunneled reply code 2
(8) eap_peap:   MS-MPPE-Encryption-Policy = Encryption-Allowed
(8) eap_peap:   MS-MPPE-Encryption-Types = RC4-40or128-bit-Allowed
(8) eap_peap:   MS-MPPE-Send-Key = 0x805f5208cc4993d0444b362c38222ed7
(8) eap_peap:   MS-MPPE-Recv-Key = 0xdb30a22b61148f386dde2b522c198a31
(8) eap_peap:   EAP-Message = 0x03b20004
(8) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(8) eap_peap:   User-Name = "bob"
(8) eap_peap:   Tunnel-Private-Group-Id = "test"
(8) eap_peap: Got tunneled reply RADIUS code 2
(8) eap_peap:   MS-MPPE-Encryption-Policy = Encryption-Allowed
(8) eap_peap:   MS-MPPE-Encryption-Types = RC4-40or128-bit-Allowed
(8) eap_peap:   MS-MPPE-Send-Key = 0x805f5208cc4993d0444b362c38222ed7
(8) eap_peap:   MS-MPPE-Recv-Key = 0xdb30a22b61148f386dde2b522c198a31
(8) eap_peap:   EAP-Message = 0x03b20004
(8) eap_peap:   Message-Authenticator = 0x00000000000000000000000000000000
(8) eap_peap:   User-Name = "bob"
(8) eap_peap:   Tunnel-Private-Group-Id = "test"
(8) eap_peap: Tunneled authentication was successful
(8) eap_peap: SUCCESS
(8) eap_peap: (TLS) send TLS 1.3 Handshake, Finished
(8) eap_peap: Saving tunneled attributes for later
(8) eap-test: Sending EAP Request (code 1) ID 179 length 39
(8) eap-test: EAP session adding &reply:State = 0xe79779bbef24603a
(8)     [eap-test] = handled
(8)   } # authenticate = handled
(8) Using Post-Auth-Type Challenge
(8) Post-Auth-Type sub-section not found.  Ignoring.
(8) session-state: Saving cached attributes
(8)   Framed-MTU = 984
(8)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(8)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, ServerHello"
(8)   TLS-Session-Information = "(TLS) send TLS 1.3 ChangeCipherSpec"
(8)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, EncryptedExtensions"
(8)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Certificate"
(8)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, CertificateVerify"
(8)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(8)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, Finished"
(8)   TLS-Session-Cipher-Suite = "TLS_AES_256_GCM_SHA384"
(8)   TLS-Session-Version = "TLS 1.3"
(8)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(8)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, Finished"
(8)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(8)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, Finished"
(8)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(8)   TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, Finished"
(8)   TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(8) Sent Access-Challenge Id 163 from 127.0.0.1:1812 to 127.0.0.1:55096 length 97
(8)   EAP-Message = 0x01b300271900170303001cfccc6ed34ffef2fce6a855605a216ead6d7733a39d8674a244a396c7
(8)   Message-Authenticator = 0x00000000000000000000000000000000
(8)   State = 0xe79779bbef24603a6d523dce6f389ec1
(8) Finished request
Waking up in 4.9 seconds.
(9) Received Access-Request Id 164 from 127.0.0.1:55096 to 127.0.0.1:1812 length 221
(9)   User-Name = "anonymous"
(9)   NAS-IP-Address = 127.0.0.1
(9)   NAS-Identifier = "hostapd"
(9)   Called-Station-Id = "72-F4-1D-8E-DA-FB:"
(9)   NAS-Port-Type = Wireless-802.11
(9)   Service-Type = Framed-User
(9)   Calling-Station-Id = "52-54-00-12-34-57"
(9)   Connect-Info = "CONNECT 0Mbps 802.11b"
(9)   Acct-Session-Id = "77C1BC3F5142477E"
(9)   Framed-MTU = 1400
(9)   EAP-Message = 0x02b300271900170303001cbab8a8e48944da2ae7732d3bfb0b48d7cbac6411cf43df757b78fb74
(9)   State = 0xe79779bbef24603a6d523dce6f389ec1
(9)   Message-Authenticator = 0x3f00decafef32d6fb83cfe710434865c
(9) Restoring &session-state
(9)   &session-state:Framed-MTU = 984
(9)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, ClientHello"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, ServerHello"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 ChangeCipherSpec"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, EncryptedExtensions"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Certificate"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, CertificateVerify"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(9)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, Finished"
(9)   &session-state:TLS-Session-Cipher-Suite = "TLS_AES_256_GCM_SHA384"
(9)   &session-state:TLS-Session-Version = "TLS 1.3"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(9)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, Finished"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(9)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, Finished"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(9)   &session-state:TLS-Session-Information = "(TLS) recv TLS 1.3 Handshake, Finished"
(9)   &session-state:TLS-Session-Information = "(TLS) send TLS 1.3 Handshake, Finished"
(9) # Executing section authorize from file /etc/freeradius/sites-enabled/test
(9)   authorize {
(9)     if (User-Name == "bob") {
(9)     if (User-Name == "bob")  -> FALSE
(9)     [mschap] = noop
(9) eap-test: Peer sent EAP Response (code 2) ID 179 length 39
(9) eap-test: Continuing tunnel setup
(9)     [eap-test] = ok
(9)     [pap] = noop
(9)   } # authorize = ok
(9) Found Auth-Type = eap-test
(9) # Executing group from file /etc/freeradius/sites-enabled/test
(9)   authenticate {
(9) eap-test: Expiring EAP session with state 0xe79779bbef24603a
(9) eap-test: Finished EAP session with state 0xe79779bbef24603a
(9) eap-test: Previous EAP request found for state 0xe79779bbef24603a, released from the list
(9) eap-test: Peer sent packet with method EAP PEAP (25)
(9) eap-test: Calling submodule eap_peap to process data
(9) eap_peap: (TLS) EAP Done initial handshake
(9) eap_peap: (TLS) recv TLS 1.3 Handshake, Finished
(9) eap_peap: Session established.  Decoding tunneled attributes
(9) eap_peap: PEAP state send tlv success
(9) eap_peap: Received EAP-TLV response
(9) eap_peap: Success
(9) eap_peap: Using saved attributes from the original Access-Accept
(9) eap_peap:   User-Name = "bob"
(9) eap_peap:   Tunnel-Private-Group-Id = "test"
(9) eap-test: Sending EAP Success (code 3) ID 179 length 4
(9) eap-test: Freeing handler
(9)     [eap-test] = ok
(9)   } # authenticate = ok
(9) Sent Access-Accept Id 164 from 127.0.0.1:1812 to 127.0.0.1:55096 length 171
(9)   User-Name = "bob"
(9)   Tunnel-Private-Group-Id = "test"
(9)   MS-MPPE-Recv-Key = 0x24c5e29215446e21ad5fffdccb777064bb583674861b5bee5544759863077a0a
(9)   MS-MPPE-Send-Key = 0x1442faa809b3c109c820fbfbe87365cacdc19fba19064a911391b9e050f5a627
(9)   EAP-Message = 0x03b30004
(9)   Message-Authenticator = 0x00000000000000000000000000000000
(9) Finished request
Waking up in 4.9 seconds.
(0) Cleaning up request packet ID 155 with timestamp +27 due to cleanup_delay was reached
(1) Cleaning up request packet ID 156 with timestamp +27 due to cleanup_delay was reached
(2) Cleaning up request packet ID 157 with timestamp +27 due to cleanup_delay was reached
(3) Cleaning up request packet ID 158 with timestamp +27 due to cleanup_delay was reached
(4) Cleaning up request packet ID 159 with timestamp +27 due to cleanup_delay was reached
(5) Cleaning up request packet ID 160 with timestamp +27 due to cleanup_delay was reached
(6) Cleaning up request packet ID 161 with timestamp +27 due to cleanup_delay was reached
(7) Cleaning up request packet ID 162 with timestamp +27 due to cleanup_delay was reached
(8) Cleaning up request packet ID 163 with timestamp +27 due to cleanup_delay was reached
(9) Cleaning up request packet ID 164 with timestamp +27 due to cleanup_delay was reached
Ready to process requests
