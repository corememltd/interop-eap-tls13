#!/bin/sh

set -eux

[ "${VENDOR:-}" -a "${PROJECT:-}" ] || { echo missing VENDOR/PROJECT environment variables; exit 1; }
BRANCH=${BRANCH:-master}

. /etc/environment
export https_proxy http_proxy ftp_proxy

export DEBIAN_FRONTEND=noninteractive

{
	echo tzdata tzdata/Areas select Etc;
	echo tzdata tzdata/Zones/Etc select UTC;
} | debconf-set-selections

apt-get update
apt-get -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" \
		--option=Dpkg::options::=--force-unsafe-io --no-install-recommends upgrade
apt-get -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" \
		--option=Dpkg::options::=--force-unsafe-io install --no-install-recommends \
	autoconf \
	automake \
	build-essential \
	ca-certificates \
	cmake \
	curl \
	debhelper \
	default-libmysqlclient-dev \
	dh-systemd \
	fakeroot \
	git \
	libcap-dev \
	libcurl4-openssl-dev \
	libdbus-1-dev \
	libgdbm-dev \
	libhiredis-dev \
	libiodbc2-dev \
	libjson-c-dev \
	libkrb5-dev \
	libldap2-dev \
	libmemcached-dev \
	libnl-3-dev \
	libnl-genl-3-dev \
	libnl-route-3-dev \
	libpam0g-dev \
	libpcap-dev \
	libperl-dev \
	libpq-dev \
	libreadline-dev \
	libsasl2-dev \
	libsqlite3-dev \
	libssl-dev \
	libsystemd-dev \
	libtalloc-dev \
	libtool \
	libwbclient-dev \
	libykclient-dev \
	libyubikey-dev \
	make \
	openssl \
	pkg-config \
	python-dev \
	quilt \
	samba-dev \
	ssl-cert \
	systemd-sysv

apt-get -y autoremove
apt-get clean
find /var/lib/apt/lists -type f -delete

case "${PACKER_BUILDER_TYPE:-}" in
docker)
	# running systemd in a container
	rm -f /usr/sbin/policy-rc.d

	# disable harmless error
	systemctl mask dev-hugepages.mount
esac

if [ -d /opt/$VENDOR/$PROJECT ]; then
	git -C /opt/$VENDOR/$PROJECT reset --hard
	git -C /opt/$VENDOR/$PROJECT pull origin HEAD
else
	mkdir /opt/$VENDOR
	git clone /tmp/$VENDOR-$PROJECT.git /opt/$VENDOR/$PROJECT
fi

shred -u /tmp/$VENDOR-$PROJECT.git

(
	set -eu
	cd /usr/src
	if [ -d libkqueue ]; then
		cd libkqueue
		git reset --hard
		git pull
	else
		git clone --single-branch --branch master https://github.com/mheily/libkqueue.git
		cd libkqueue
	fi
	cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib
	make -j$(($(getconf _NPROCESSORS_ONLN)+1))
	make install
)
(
	set -eu
	cd /usr/src
	# https://github.com/jimdigriz/freeradius-oauth2-perl#8021x-1
	if [ -d hostap ]; then
		cd hostap
		git reset --hard
		git pull
	else
		git clone --single-branch --branch master git://w1.fi/hostap.git
		cd hostap
	fi
	sed -e 's/^#CONFIG_EAPOL_TEST=y/CONFIG_EAPOL_TEST=y/' wpa_supplicant/defconfig > wpa_supplicant/.config
	make -C wpa_supplicant -j$(($(getconf _NPROCESSORS_ONLN)+1)) eapol_test
	ln -f -s -t /usr/local/bin $(pwd)/wpa_supplicant/eapol_test
)
(
	set -eu
	cd /usr/src
	if [ -d freeradius-server ]; then
		cd freeradius-server
		quilt pop -a || true
		git reset --hard
		git pull
	else
#		git clone --single-branch --branch v3.0.x https://github.com/FreeRADIUS/freeradius-server.git
		git clone --single-branch --branch tls-misc https://github.com/jimdigriz/freeradius-server.git
		cd freeradius-server
	fi
	# FR build is racey on Debian parallel builds :(
	make deb
	#fakeroot debian/rules debian/control
	#fakeroot dpkg-buildpackage -b -uc -jauto

	# make testing faster
	curl -f --compressed -o raddb/certs/dh https://ssl-config.mozilla.org/ffdhe2048.txt

	make test

	# make installation faster
	mkdir -p /etc/freeradius/certs
	ln -f -t /etc/freeradius/certs raddb/certs/dh

	find /usr/src \
			-maxdepth 1 -type f \
			-regex '.*/\(freeradius_\|libfreeradius3_\|freeradius-\(common\|config\|utils\)\).*\.deb' \
		| xargs -t apt-get -y install

	mkdir -p /var/log/freeradius/tlscache
	chown root:freerad /var/log/freeradius/tlscache
	chmod 770 /var/log/freeradius/tlscache

	ln -f -s -t /opt/$VENDOR/$PROJECT /etc/freeradius/certs
)

find /etc/freeradius/mods-enabled /etc/freeradius/sites-enabled -type f,l -delete
find /etc/freeradius/sites-enabled -type f,l -delete
find /opt/$VENDOR/$PROJECT/services/freeradius/policy.d -type f          | xargs -r -t ln -f -s -t /etc/freeradius/policy.d
find /opt/$VENDOR/$PROJECT/services/freeradius/mods-available -type f,l  | xargs -r -t ln -f -s -t /etc/freeradius/mods-enabled
find /opt/$VENDOR/$PROJECT/services/freeradius/sites-available -type f,l | xargs -r -t ln -f -s -t /etc/freeradius/sites-enabled

freeradius -C || freeradius -XC
if [ "${PACKER_BUILDER_TYPE:-}" = null ]; then
	invoke-rc.d freeradius start
	invoke-rc.d freeradius reload
fi

exit 0
